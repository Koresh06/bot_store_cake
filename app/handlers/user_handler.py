from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart, StateFilter, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state

from app.FSM.fsm import Telephone_user
from app.requests.user_requests import (
    chek_user,
    add_user, 
    show_phone,
)
from app.requests.admin_requests import output_categories
from app.keyboards.inline_kb import (
    new_user,
    user_categories,
    kb_help,
)
from app.keyboards.reply_rb import (
    user_menu_kb,
    men_menu,
)
import config


router = Router()

@router.message(F.text.endswith('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
@router.message(CommandStart(), StateFilter(default_state))
async def cmd_start(message: Message, state: FSMContext):
    user = await chek_user(message.from_user.id, message.from_user.first_name)
    if not user:
        await message.answer('–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∞—è <b>–í–ö–£–°–ù–´–ï –¢–û–†–¢–´</b>')
        await message.answer('–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +7–•–•–•—Ö—Ö—Ö–•–•–•–•')
        await state.set_state(Telephone_user.phone)
    else:
        await message.answer('–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, –º—ã —Ä–∞–¥—ã –≤–Ω–æ–≤—å –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∞—Ç—å –≤ –Ω–∞—à–µ–π –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–æ–π <b>–í–ö–£–°–ù–´–ï –¢–û–†–¢–´</b>\n\n–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é ‚¨áÔ∏è', reply_markup=await user_menu_kb())

@router.message(StateFilter(Telephone_user.phone))
async def cmd_telephone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    res = await state.get_data()
    if await add_user(message.from_user.id, message.from_user.first_name, res['phone']):
        await message.answer('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞', reply_markup=await user_menu_kb())
        await message.bot.send_message(chat_id=config.ADMIN_ID, text=f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {message.from_user.first_name}', reply_markup=await new_user(message.from_user.id, message.from_user.first_name))
        await state.clear()
    else:
        await message.answer(f'–û—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {config.ADMIN_URL}')
        await state.clear()

@router.message(Command(commands='cancel'), StateFilter(default_state))
async def process_cancel_command(message: Message):
    await message.answer(
        text='–í—ã –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç–µ —Ñ–æ—Ä–º—É, –ø–æ—ç—Ç–æ–º—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π!'
    )

@router.message(Command(commands='cancel'), ~StateFilter(default_state))
async def process_cancel_command_state(message: Message, state: FSMContext):
    await message.answer(
        text='–û—Ç–º–µ–Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã\n\n–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∑–∞–Ω–æ–≤–æ'
    )
    await state.clear()

@router.message(F.text.endswith('–ú–µ–Ω—é'))
async def cmd_categories_product(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ', reply_markup=await men_menu())

@router.message(F.text.endswith('–ö–∞—Ç–∞–ª–æ–≥'))
async def cmd_categories_product(message: Message):
    name_categories = await output_categories()
    if name_categories:
        await message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ—Ä—Ç–æ–≤', reply_markup=await user_categories())
    else:
        await message.answer('–ö–∞—Ç–∞–ª–æ–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—É—Å—Ç', reply_markup=await user_menu_kb())

@router.message(F.text.endswith('–ú–æ–π –ü—Ä–æ—Ñ–∏–ª—å'))
async def user_profile(message: Message):
    phone = await show_phone(message.from_user.id)
    await message.answer(f'‚îåüì∞ –í–∞—à –ü—Ä–æ—Ñ–∏–ª—å\n‚îú–ò–º—è: <code>{message.from_user.first_name}</code>\n‚îúID: <code>{message.from_user.id}</code>\n‚îú–¢–µ–ª–µ—Ñ–æ–Ω: <code>{phone}</code>\n‚îî–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: <code>0 —à—Ç.</code>')

@router.message(F.text.endswith('–ü–æ–º–æ—â—å'))
async def cmd_help(message: Message):
    await message.answer('üî∏–£ –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã?\n–ú—ã —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –æ—Ç–≤–µ—Ç–∏–º!\n', reply_markup=kb_help)

@router.message(F.text.endswith('–î—Ä—É–≥–æ–µ'))
async def cmd_drygoe(message: Message):
    await message.answer('–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ/–∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–æ–π', await user_menu_kb())
    

@router.message()
async def cmd_echo(message: Message):
    await message.answer('–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞/—Ç–µ–∫—Å—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏–ª–∏ –≤—ã –ø–∏—à–∏—Ç–µ –∫–∞–∫—É—é-—Ç–æ –µ—Ä—É–Ω–¥—É –∏ –±–æ—Ç –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç ü•¥')